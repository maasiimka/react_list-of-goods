{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","handleSortType","order","setState","handleOrderChange","handleReset","this","ALPHABET","LENGTH","goods","visibleGoods","sort","a","b","length","console","log","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,uGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA8CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEL,SAAUI,KAP9B,EAUEE,kBAAoB,WAClB,EAAKD,UAAS,SAACN,GAAD,mBAAC,eACVA,GADS,IAEZG,YAAaH,EAAMG,iBAbzB,EAiBEK,YAAc,WACZ,EAAKF,SAAS,CACZL,SAAUJ,EAASK,KACnBC,YAAY,KApBlB,4CAwBE,WACE,IACEH,EAIES,KAJFT,MACAI,EAGEK,KAHFL,eACAG,EAEEE,KAFFF,kBACAC,EACEC,KADFD,YAIAP,EAEED,EAFFC,SACAE,EACEH,EADFG,WAIAO,EAEEb,EAFFa,SACAC,EACEd,EADFc,OAGIC,EA5EH,SACLA,EADK,GAGJ,IADCX,EACF,EADEA,SAAUE,EACZ,EADYA,WAGNU,EAAY,YAAOD,GAgBzB,OAdAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQf,GACN,KAAKJ,EAASa,SACZ,OAAOK,EAAIC,GAAK,EAAI,EACtB,KAAKnB,EAASc,OACZ,OAAOI,EAAEE,OAASD,EAAEC,OACtB,QACE,OAAO,MAKbC,QAAQC,IAAIlB,EAAUE,GAElBA,EACKU,EAAaO,UAGfP,EAmDSQ,CAAkBvB,EAAiBE,GAEjD,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYvB,IAAaS,IAE7Be,QAAS,kBAAMrB,EAAeM,IAPhC,iCAYA,wBACEa,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYvB,IAAaU,IAE7Bc,QAAS,kBAAMrB,EAAeO,IAPhC,4BAYA,wBACEY,KAAK,SACLD,UAAWE,IACT,SACA,cACA,CAAE,YAAarB,IAEjBsB,QAASlB,EAPX,sBAaGN,IAAaJ,EAASK,MAAQC,IAC7B,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAASjB,EAHX,sBAWN,6BACE,6BACGI,EAAMc,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,iBAnGvB,GAAyBC,aC7DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2a3a0b28.chunk.js","sourcesContent":["import { Component, ReactNode } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a < b ? -1 : 1;\n      case SortType.LENGTH:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n// type State = {\n//   isReversed: boolean,\n//   sortType: SortType,\n// };\n\nexport class App extends Component<{}, ReorderOptions> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  handleSortType = (order: SortType) => {\n    this.setState({ sortType: order });\n  };\n\n  handleOrderChange = () => {\n    this.setState((state) => ({\n      ...state,\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render(): ReactNode {\n    const {\n      state,\n      handleSortType,\n      handleOrderChange,\n      handleReset,\n    } = this;\n\n    const {\n      sortType,\n      isReversed,\n    } = state;\n\n    const {\n      ALPHABET,\n      LENGTH,\n    } = SortType;\n\n    const goods = getReorderedGoods(goodsFromServer, state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== ALPHABET },\n            )}\n            onClick={() => handleSortType(ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== LENGTH },\n            )}\n            onClick={() => handleSortType(LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning ',\n              { 'is-light': !isReversed },\n            )}\n            onClick={handleOrderChange}\n          >\n            Reverse\n          </button>\n\n          {\n            (sortType !== SortType.NONE || isReversed) && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={handleReset}\n              >\n                Reset\n              </button>\n            )\n          }\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(good => (\n              <li key={good} data-cy=\"Good\">{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}